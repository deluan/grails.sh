#!/bin/bash
# Original Version: http://github.com/deluan

# Check if GRAILS_HOME is set
if [ -z "$GRAILS_HOME" -o ! -d "$GRAILS_HOME" ]; then
	echo "Error: GRAILS_HOME not set"
	exit 2
fi

# From: https://github.com/alxndrsn/grails.sh/blob/master/dirname
dirname() 
{
	echo $1 | sed -e "s/[^\/\\]*$//" -e "s/^$/./"	
}

# Extract the default version and base path from GRAILS_HOME
DEFAULT_VERSION=`basename $GRAILS_HOME | cut -f 2 -d "-"`
BASE_GRAILS_PATH=`dirname $GRAILS_HOME`
APP_PROP="application.properties"
DOWNLOAD_BASE_URL="http://dist.springframework.org.s3.amazonaws.com/release/GRAILS"

# Try to get the version from the command line
TRY_VERSION=$1
if [[ $TRY_VERSION =~ [0-9]\.[0-9]\.[0-9] ]]; then
	VERSION=$TRY_VERSION
	shift
fi 

# Or else get the version from the application.properties in the current directory
[ -z "$VERSION" -a -f "$APP_PROP" ] &&
    VERSION=`awk -F'=' '/app.grails.version/ { print $2 }' $APP_PROP | tr -d '\r\n'`

# Or else use the default version
[ -z "$VERSION" ] &&
	VERSION=$DEFAULT_VERSION

export GRAILS_HOME=${BASE_GRAILS_PATH}/grails-${VERSION}

# Attempt to download and unzip the specified version if it does not exist
if [ ! -d ${GRAILS_HOME} ]; then
        NEW_GRAILS_FILE=grails-${VERSION}
        echo "grails ${VERSION} does not exist, attempting to download..."
        curl "${DOWNLOAD_BASE_URL}/${NEW_GRAILS_FILE}.zip" -o ${NEW_GRAILS_FILE}.zip
        unzip ./${NEW_GRAILS_FILE}.zip -d ${BASE_GRAILS_PATH}/
        rm -r ${NEW_GRAILS_FILE}.zip
        if [ -d ${GRAILS_HOME} ]; then
            echo "Got grails version $VERSION successfully"
        else
            echo "Failed to get grails version $VERSION"
        fi
fi

GRAILS_CMD=${GRAILS_HOME}/bin/grails

if [ ! -x "$GRAILS_CMD" ]; then
	echo "Error: grails command not found at '$GRAILS_CMD'!"
	exit 3
fi

exec $GRAILS_CMD "$@"
